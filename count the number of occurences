Given a sorted array arr[] of size N and a number X, you need to find the number of occurrences of X in given array.
SOLUTION :-
public class CountOccurrences {

    
    public static int findFirstOccurrence(int[] arr, int X) {
        int low = 0;
        int high = arr.length - 1;
        int firstOccurrence = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (arr[mid] == X) {
                firstOccurrence = mid;
                high = mid - 1;
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        return firstOccurrence;
    }

    public static int findLastOccurrence(int[] arr, int X) {
        int low = 0;
        int high = arr.length - 1;
        int lastOccurrence = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (arr[mid] == X) {
                lastOccurrence = mid;
                low = mid + 1;
            } else if (arr[mid] < X) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        return lastOccurrence;
    }


    public static int countOccurrences(int[] arr, int X) {
        int firstIndex = findFirstOccurrence(arr, X);
        
        if (firstIndex == -1) {
            
            return 0;
        }
        
        int lastIndex = findLastOccurrence(arr, X);
        
        return lastIndex - firstIndex + 1;
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 2, 2, 3, 4, 5};
        int X = 2;

        int count = countOccurrences(arr, X);
        System.out.println("Number of occurrences of " + X + " in the array: " + count);
    }
}
 


